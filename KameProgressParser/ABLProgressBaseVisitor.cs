//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Desenv\KameProgressScript\KameProgressParser\ABLProgress.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IABLProgressVisitor{Result}"/>,
/// which can be extended to create a visitor which only needs to handle a subset
/// of the available methods.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class ABLProgressBaseVisitor<Result> : AbstractParseTreeVisitor<Result>, IABLProgressVisitor<Result>
{
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.script"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitScript([NotNull] ABLProgressParser.ScriptContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.instruction"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitInstruction([NotNull] ABLProgressParser.InstructionContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.action"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitAction([NotNull] ABLProgressParser.ActionContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.sequenceCycleOnLimitValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitSequenceCycleOnLimitValue([NotNull] ABLProgressParser.SequenceCycleOnLimitValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.sequenceIncrementValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitSequenceIncrementValue([NotNull] ABLProgressParser.SequenceIncrementValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.sequenceInitialValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitSequenceInitialValue([NotNull] ABLProgressParser.SequenceInitialValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.sequenceMinValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitSequenceMinValue([NotNull] ABLProgressParser.SequenceMinValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.sequenceForeignName"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitSequenceForeignName([NotNull] ABLProgressParser.SequenceForeignNameContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.sequenceForeigOwner"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitSequenceForeigOwner([NotNull] ABLProgressParser.SequenceForeigOwnerContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.sequenceObject"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitSequenceObject([NotNull] ABLProgressParser.SequenceObjectContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.sequenceOptions"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitSequenceOptions([NotNull] ABLProgressParser.SequenceOptionsContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.indexObject"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitIndexObject([NotNull] ABLProgressParser.IndexObjectContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.indexOnValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitIndexOnValue([NotNull] ABLProgressParser.IndexOnValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.indexForeignNameValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitIndexForeignNameValue([NotNull] ABLProgressParser.IndexForeignNameValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.indexNumValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitIndexNumValue([NotNull] ABLProgressParser.IndexNumValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.indexFieldValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitIndexFieldValue([NotNull] ABLProgressParser.IndexFieldValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.indexFields"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitIndexFields([NotNull] ABLProgressParser.IndexFieldsContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.indexOptions"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitIndexOptions([NotNull] ABLProgressParser.IndexOptionsContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.indexAreavalue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitIndexAreavalue([NotNull] ABLProgressParser.IndexAreavalueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.tableObject"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitTableObject([NotNull] ABLProgressParser.TableObjectContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.tableOptions"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitTableOptions([NotNull] ABLProgressParser.TableOptionsContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.tableAreaValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitTableAreaValue([NotNull] ABLProgressParser.TableAreaValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.tableDumpNameValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitTableDumpNameValue([NotNull] ABLProgressParser.TableDumpNameValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.tableForeignNameValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitTableForeignNameValue([NotNull] ABLProgressParser.TableForeignNameValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.tableForeignOwnerValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitTableForeignOwnerValue([NotNull] ABLProgressParser.TableForeignOwnerValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.tableProgressRecidValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitTableProgressRecidValue([NotNull] ABLProgressParser.TableProgressRecidValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.tableType"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitTableType([NotNull] ABLProgressParser.TableTypeContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldObject"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldObject([NotNull] ABLProgressParser.FieldObjectContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldDataTypeValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldDataTypeValue([NotNull] ABLProgressParser.FieldDataTypeValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldForeignCodeValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldForeignCodeValue([NotNull] ABLProgressParser.FieldForeignCodeValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldForeignNameValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldForeignNameValue([NotNull] ABLProgressParser.FieldForeignNameValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldForeignPosValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldForeignPosValue([NotNull] ABLProgressParser.FieldForeignPosValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldFormatValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldFormatValue([NotNull] ABLProgressParser.FieldFormatValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldInitialValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldInitialValue([NotNull] ABLProgressParser.FieldInitialValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldMisc13Value"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldMisc13Value([NotNull] ABLProgressParser.FieldMisc13ValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldMisc14Value"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldMisc14Value([NotNull] ABLProgressParser.FieldMisc14ValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldMisc15Value"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldMisc15Value([NotNull] ABLProgressParser.FieldMisc15ValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldOfValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldOfValue([NotNull] ABLProgressParser.FieldOfValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldClobCodePageValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldClobCodePageValue([NotNull] ABLProgressParser.FieldClobCodePageValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldClobCollationValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldClobCollationValue([NotNull] ABLProgressParser.FieldClobCollationValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldClobTypeValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldClobTypeValue([NotNull] ABLProgressParser.FieldClobTypeValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldOptions"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldOptions([NotNull] ABLProgressParser.FieldOptionsContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldOrderValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldOrderValue([NotNull] ABLProgressParser.FieldOrderValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldPositionValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldPositionValue([NotNull] ABLProgressParser.FieldPositionValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldShadowColValue"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldShadowColValue([NotNull] ABLProgressParser.FieldShadowColValueContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.objectName"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitObjectName([NotNull] ABLProgressParser.ObjectNameContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.foreignTypeValues"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitForeignTypeValues([NotNull] ABLProgressParser.ForeignTypeValuesContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.quotedString"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitQuotedString([NotNull] ABLProgressParser.QuotedStringContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.unquotedString"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitUnquotedString([NotNull] ABLProgressParser.UnquotedStringContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.fieldFormatMask"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitFieldFormatMask([NotNull] ABLProgressParser.FieldFormatMaskContext context) { return VisitChildren(context); }
    /// <summary>
    /// Visit a parse tree produced by <see cref="ABLProgressParser.dataTypes"/>.
    /// <para>
    /// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
    /// on <paramref name="context"/>.
    /// </para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    /// <return>The visitor result.</return>
    public virtual Result VisitDataTypes([NotNull] ABLProgressParser.DataTypesContext context) { return VisitChildren(context); }
}
